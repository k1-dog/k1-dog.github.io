import{_ as i,c as a,o as n,af as h}from"./chunks/framework.DKr5v3zP.js";const k="/eyes/assets/pie.BkiSM6Pq.png",l="/eyes/assets/bar.3uWLpYzb.png",y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdowns/k1-boot.md","filePath":"markdowns/k1-boot.md"}'),p={name:"markdowns/k1-boot.md"};function t(F,s,e,r,d,E){return n(),a("div",null,s[0]||(s[0]=[h(`<h2 id="m9组件系列-k1风格-组件文档" tabindex="-1">M9组件系列 K1风格 - 组件文档 <a class="header-anchor" href="#m9组件系列-k1风格-组件文档" aria-label="Permalink to &quot;M9组件系列 K1风格 - 组件文档&quot;">​</a></h2><p><strong>M9目标规划</strong></p><p>M9系列为纯个人学习提升的技能精进合集，顾名思义，我要打造一套属于自己前端的独孤九剑：</p><ul><li><p>第一剑：K1 - 组件库（大体设计完成，将会不断补充B端、C端通用组件）</p></li><li><p>第二剑：K2 - 2D 数据可视化库（筹备中）</p></li><li><p>第三剑：K3 - WebComponents 原生组件开发框架（待开展 - 实现真正的夸类库开发）</p></li><li><p>第四剑：K4 - M9WebAdaptor 页面元素自适应布局嗅探器（筹备中 - 高度灵活可配的自适应布局器）</p></li><li><p>第五剑：K5 - 简易的 nodejs 服务端框架（待开展 - 实现前端链上的自我前后端统一）</p></li><li><p>第六剑：K6 - 简易的 K6Bundler 工程化构建工具（待开展 - K6型打包器）</p></li><li><p>第七剑：K7 - 简易的 K7-Client 前端脚手架（待开展 - 将M9系列的K1 ~ K9 独孤九剑整合到K7脚手架中）</p></li><li><p>第八剑：K8 - 简易的样式系统（待开展 - 都2024了，css属性规则还是乱成一锅粥，将来沉淀一下有关css属性集合，整合成类似 tailwind 的风格）</p></li><li><p>第九剑：K9 - 对标开发界最热门流行的技术 ~ 人工智能（有生之年 - 将这一套整合转型成能够自动学习的前端智能框架）</p></li></ul><hr><p><strong>简介</strong></p><p>该组件库为 M9组件系列中 K1(浪漫主题)风格，风格样式均为自行设计。我并非专业 UI|UE 设计师，站点中相关风格均为慢慢调整出来的。支持双色风格，各位看官可以切换网页右上角明暗开关切换明暗模式。推荐暗黑模式观看（设计初衷就是奔着暗黑风格去的）</p><hr><p><strong>工具栈</strong></p><p>既然是组件库轮子项目，本人竭力不借助第三方工具库，尽力将各通用功能封装到位。目前站点及m9组件库中，使用的三方依赖涉及如下：</p><ol><li>&quot;classnames&quot;: &quot;^2.3.1&quot;, - &lt;样式类名拼装器&gt;</li><li>&quot;core-js&quot;: &quot;^3.6.5&quot;, - &lt;库中可能涉及到一些es代码兼容或补丁，靠core-js打补丁&gt;</li><li>&quot;dayjs&quot;: &quot;^1.11.5&quot;, - &lt;时间处理器&gt; [开发时间选择器时使用]</li><li>&quot;vue&quot;: &quot;^3.2.25&quot; - &lt;vue3.x 框架&gt;</li><li>&quot;sass&quot;: &quot;^1.54.3&quot;, - &lt;sass 预处理器&gt;</li><li>&quot;typescript&quot;: &quot;^4.0.0&quot;, - &lt;ts 类型提示器&gt;</li><li>&quot;vite&quot;: &quot;^4.0.0&quot;, - &lt;vite 工程化构建器&gt;</li><li>&quot;vitepress&quot;: &quot;^1.0.0-rc.44&quot; - &lt;vitepress 静态文档站点生成器&gt;</li></ol><hr><p><strong>目的</strong></p><p>本人日常工作和学习中，遇到的大大小小问题的整合统一，开发对应组件统一集成处理，沉淀出自己的组件优势，摆脱对市面上流行库的依赖。PS（市面上的 AntD、ElementUI，个人认为封装的组件功能大而杂，且部分render元素结构极不合理，经常多层div的嵌套，页面元素莫名增多，比如table表格组件，为了实现冻结列功能，最后他们有些版本渲染出的元素竟然是三个 table元素相连的，我看着就头大。。。） m9系列组件，意在突破市面流行库的桎梏，真正集成一些小而精的为我所用的高度封装组件。</p><hr><p><strong>通用能力</strong></p><p>K1风格中，内部高度集成了一些通用功能组件：</p><ol><li>元素点击的涟漪波纹效果</li><li>元素拖拽效果（上下左右边框拉伸也可主动控制，在 Modal弹框和 TableHeader 组件中有实际应用）</li><li>弹跳动画（气泡元素中有应用）</li><li>防抖节流（虚拟滚动时有实际应用）</li><li>虚拟滚动（只要涉及到大数据渲染的组件，我全部集成了自己的虚拟滚动能力，主要体现在 下拉框、表格组件中）</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟滚动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> M9VScrollProps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化时</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 待滚动的目标窗口元素,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 函数包裹</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">调用时才返回,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 防止有时会出现元素还没渲染到节点上的异步渲染问</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">题</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  vsElement:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HTMLElement</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化时</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 窗口滚动样式设置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  vsStyle:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟滚动的单元高度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  vsUnitHeight:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 被虚拟化的原始数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  data:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">an</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> M9VScrollState</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化时</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 上极限索引坐标</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  topIndex:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化时</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 下极限索引坐标</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  bottomIndex:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化时</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 通过上下极限</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 截取的局部数据片段</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> M9VSDataT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">an</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> M9VSWindowProps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 可视窗口宽度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  width:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 可视窗口高度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  height:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 可视窗口内</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 单元高度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  unitHeight:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 可视窗口上下两边留出的多余数据数量</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">防止滚动过快出现的上下留白情况,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 避免造成不流畅的观感体</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">验</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  restViewLength:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 可视窗口最大能承载的数据数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  dataViewLength:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 可视窗口对应的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 子元素DOM节点本身记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  __viewportEl:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HTMLElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> null,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 虚拟化</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 全部内容窗口对应的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 子元素DOM节点本身记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  __contentEl:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HTMLElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><p><strong>优势</strong></p><ul><li>小而精的代码，清晰合理的模块化设计（属于编码规范的管控，这个真的很重要。工欲善其事必先利其器，合理的组织css、拆分大功能、封装小功能，合理的生命周期控制。这里我说的生命周期属于软件工程的那种，要对每一个模块、每一个函数、每一个对象、每一个数组都要尽力做到精细控制，有创建、就有销毁，谁都不例外。养成好习惯，当数组、Map、或一个对象实例使用完毕后，手动置空 null，帮助浏览器立即进行垃圾回收，后续可能就会避开很多性能问题。只有将这些小事项处理好了，那么打造的摩天大楼根基才会稳定）</li><li>精细的性能体验，比如 单实例控制 dragHelper提示线，虚拟滚动及防抖节流，都在节省渲染性能开销</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 单例模式</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 全系统仅提供一个</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 拖拽-helper</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 提示线元素,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 最大程度节省性能</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> M9DragHelperCtor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> !</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 闭包定义变量名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 防止全部变量污染</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    var</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> one_m9DragHelper</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (props, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">helper_div_root:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HTMLDivElement</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> document.createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> one_m9DragHelper = one_m9DragHelper </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createApp(M9DragHelperComponent,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      root:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> helper_div_root,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      direction:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> props.direction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }).mount(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helper_div_root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> default M9DragHelperCtor()</span></span></code></pre></div><ul><li>select 选择框旁边的小南瓜头，是 webComponents 原生组件设计的，未来对原生组件的设计开发，可能会放到我后续的 K2风格中（目前还处于规划阶段，K2风格未开展）用原生真正实现跨类库开发</li></ul><hr><p><strong>不足</strong></p><ol><li>待补充一个 CardTabs 选项滑动卡片 组件，后续完善</li><li>我发现有时vue组件莫名其妙连续渲染多次，后边考虑实现类似 react-hook 中的 useMemo、useCallback 实现对组件渲染的缓存，将渲染性能优化到极致（只在对应的 deps中 响应式数据变化才响应，不变化不响应）</li><li>后续可能会设计一套简易的全局状态管理库 SeerX</li><li>表单后续可能会向自动化动态表单转型（其实目前内部的这个表单模型，内部渲染表单的方式就是个低配版的低代码方式，纯纯的是利用用户输入的各种表单项的配置对象进行各表单项的组件渲染）</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 表单单元域控件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 生成器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RenderFieldItem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> function</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RenderFieldItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FKEYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  _ctx:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SetupContext,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  FieldOptions:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> M9ZzFieldT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FKEYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  zv$:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  M9ZzFormHooksT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FKEYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[&#39;zv$&#39;],</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  isSubmitted:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> M9InvalidT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extends</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">infer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> B</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldName,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> label,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> required,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> }</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldOptions</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldZV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[FieldName].value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asyncFieldComponent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;IPT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    asyncFieldComponent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> InputUI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FKEYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_ctx,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldOptions,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldZV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isSubmitted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SLT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    asyncFieldComponent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SelectUI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FKEYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_ctx,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldOptions,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldZV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isSubmitted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SWITCH&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    asyncFieldComponent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SwitcherUI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FKEYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_ctx,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldOptions,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldZV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isSubmitted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;TIME&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    asyncFieldComponent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DateUI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FKEYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_ctx,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldOptions,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldZV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isSubmitted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;FILE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asyncFieldComponent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FilerUI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FKEYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_ctx,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldOptions,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldZV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isSubmitted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;CBOX-G&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    asyncFieldComponent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CheckboxGroupUI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FKEYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_ctx,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldOptions,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldZV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isSubmitted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __class0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    lg:col-$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> === &#39;CBOX-G&#39; ? &#39;12&#39; : &#39;4&#39;}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    md:col-$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> === &#39;CBOX-G&#39; ? &#39;12&#39; : &#39;6&#39;}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    sm:col-$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> === &#39;CBOX-G&#39; ? &#39;12&#39; : &#39;12&#39;}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isError</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FieldZV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$invalid &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isSubmitted</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _errorFieldcls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> classNames</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ &#39;m9-field__required--invalid&#39;: isError })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asyncFieldComponent</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &amp;&amp; (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">div</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> className={\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">m9-field</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \${</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_class</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ? </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_class</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __class0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_errorFieldcls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> className=&#39;m9-field__label&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">label}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {required</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">span</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> className=&#39;zz-dot&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/spa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/h4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">div</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> className=&quot;m9-field__component&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asyncFieldComponent}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">small</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> className=&#39;m9-field__required--message&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{FieldZV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/smal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="5"><li>表格的在线编辑能力</li></ol><hr><p><strong>展望</strong></p><p>m9系列组件库，未来会着重两点：响应式 + 可视化:</p><ol><li>我对可视化极有兴趣，K1风格中，现在已经实现了一个简易柱状图和一个简易饼状图，未来在K1风格的可视化天下中，再集成出 贝塞尔折线图、组合柱状图、雷达图、外加我自己的 可视化高性能抽取引擎（类似于虚拟渲染，只可视化可视的部分~QAQ~). <img src="`+k+'" alt="柱状图示例"><img src="'+l+'" alt="饼图示例"></li><li>响应式 - 大多数库和中小型网站（国内），好像对网页响应式处理上都不够精细。 在我的 K1风格库中，有一套简易的响应式处理器（M9Adaptor）。大概工作流程是：</li></ol><ul><li>将该组件包裹在任意位置，组件会在 onMounted 周期内，开启对响应式元素的嗅探</li><li>检测元素上的标记 &quot;m9-web-dom&quot; 这个属性，我的嗅探器就会认定他是个待响应布局的元素，然后解析对应的响应布局属性：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">div className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">preCls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}--filelist`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} m9-web-dom=&quot;::document =&gt; md -&gt; display: flex;flex-wrap: wrap;max-height: 10rem&quot;&gt;</span></span></code></pre></div><p>那么我的嗅探器将会开启正则编译，将关键信息提取出来，上述表达含义翻译成人话就是：</p><ul><li>我是一个html元素，我需要根据 id=&quot;m9-pid&quot; 这个元素的尺寸而变化自身布局</li><li>当 m9-pid 元素尺寸变成 lg 大号时，我本身的布局样式会变成 &quot;display:inline-block 900; width: 500px; height : 200px&quot;</li><li>当 m9-pid 元素尺寸变成 md 中号时，我本身的布局样式会变成 &quot;width :100px&quot;</li><li>当 m9-pid 元素尺寸变成 sm 中号时，我本身的布局样式会变成 &quot;opacity: 0.5&quot;</li></ul><hr><p>目前该元素响应式嗅探布局器，还待完善，目前可以使用，但有明显缺陷：</p><ul><li>利用 MutationObserve API 实时监听目标响应元素的 style 变化，进而响应布局那些关联元素。</li><li>元素自身的 style 不变，但尺寸发生变化时，MutationObserve 无法监听响应。</li></ul><hr><p>PS（后边我有注意到还有一个API，叫做 ResizeObserve API，这个可能才是那个正儿八经的实时监听元素尺寸变化的那个功能，但是使用很诡异，网上说的方式实例化一个 resizeObserve 时，在构造函数中，创造一个 类似 requestAnimationFrame 的轮询定时器，不断执行尺寸变化后的动作。但是这个我感觉不好控制，而且实现方式不好。我本人是代码洁癖，所以未来我要自己找一个合适的方案，将k1嗅探器打造成一个真正的响应式嗅探器）</p>',42)]))}const C=i(p,[["render",t]]);export{y as __pageData,C as default};
